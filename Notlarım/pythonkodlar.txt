PYTHON Kodlar

1. df.dtypes

year                     int64
category                object
prize                   object
motivation              object
prize_share             object
laureate_id              int64
laureate_type           object
full_name               object
birth_date              object
birth_city              object
birth_country           object
sex                     object
organization_name       object
organization_city       object
organization_country    object
death_date              object
death_city              object
death_country           object
dtype: object

2. df.describe()

year	laureate_id
count	911.000000	911.000000
mean	1969.201976	462.515917
std	32.837978	270.236159
min	1901.000000	1.000000
25%	1946.000000	228.500000
50%	1975.000000	457.000000
75%	1997.000000	698.500000
max	2016.000000	937.000000

3.  df.shape
(911, 18)

4.  duplicate_rows_df= df[df.duplicated()]
print ("number of duplicate rows:"),duplicate_rows_df.shape

number of duplicate rows:
(None, (0, 18))

5.  print(df.isnull().sum())


year                      0
category                  0
prize                     0
motivation               88
prize_share               0
laureate_id               0
laureate_type             0
full_name                 0
birth_date               28
birth_city               28
birth_country            26
sex                      26
organization_name       246
organization_city       244
organization_country    244
death_date              318
death_city              335
death_country           329
dtype: int64


6.  df.info()

<class 'pandas.core.frame.DataFrame'>
RangeIndex: 911 entries, 0 to 910
Data columns (total 18 columns):
 #   Column                Non-Null Count  Dtype 
---  ------                --------------  ----- 
 0   year                  911 non-null    int64 
 1   category              911 non-null    object
 2   prize                 911 non-null    object
 3   motivation            823 non-null    object
 4   prize_share           911 non-null    object
 5   laureate_id           911 non-null    int64 
 6   laureate_type         911 non-null    object
 7   full_name             911 non-null    object
 8   birth_date            883 non-null    object
 9   birth_city            883 non-null    object
 10  birth_country         885 non-null    object
 11  sex                   885 non-null    object
 12  organization_name     665 non-null    object
 13  organization_city     667 non-null    object
 14  organization_country  667 non-null    object
 15  death_date            593 non-null    object
 16  death_city            576 non-null    object
 17  death_country         582 non-null    object
dtypes: int64(2), object(16)
memory usage: 128.2+ KB


7.  print(df.nunique())

year                    113
category                  6
prize                   579
motivation              565
prize_share               4
laureate_id             904
laureate_type             2
full_name               904
birth_date              868
birth_city              601
birth_country           121
sex                       2
organization_name       295
organization_city       181
organization_country     29
death_date              582
death_city              291
death_country            50
dtype: int64



8. soruda yaş filtreleme
# Tüm tarihleri aynı formata dönüştür
df['birth_date'] = pd.to_datetime(df['birth_date'], errors='coerce')

# Birth_date sütununda eksik veya hatalı değerlerin olduğunu kontrol et
missing_dates = df[df['birth_date'].isnull()]
print("Eksik veya hatalı tarihlerin sayısı:", len(missing_dates))

# Birth_date sütununda eksik veya hatalı tarihlerin olduğu satırları veriden kaldır
df = df.dropna(subset=['birth_date'])

# Yaşları hesaplamak için birth_date sütunundaki tarihlerden doğum yıllarını alarak yeni bir sütun ekle
df['year'] = pd.to_datetime(df['year']).dt.year
df['age_at_award'] = df['year'] - df['birth_date'].dt.year

# DataFrame'i yazdır
print(df)

## yaş için kullandığım sorgu
df['combined_date'] = df['year'].astype(str) + '-' + df['prize_share']

# Oluşturulan yeni sütunu ekrana yazdıralım
print(df)